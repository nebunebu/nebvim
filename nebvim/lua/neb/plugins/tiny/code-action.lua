require("tiny-code-action").setup({
	--- The backend to use, currently only "vim" and "delta" are supported
	backend = "vim",
	-- backend_opts = {
	-- 	delta = {
	-- 		-- Header from delta can be quite large.
	-- 		-- You can remove them by setting this to the number of lines to remove
	-- 		header_lines_to_remove = 4,
	--
	-- 		-- The arguments to pass to delta
	-- 		-- If you have a custom configuration file, you can set the path to it like so:
	-- 		-- args = {
	-- 		--     "--config" .. os.getenv("HOME") .. "/.config/delta/config.yml",
	-- 		-- }
	-- 		args = {
	-- 			"--line-numbers",
	-- 		},
	-- 	},
	-- },
	-- telescope_opts = {
	-- 	layout_strategy = "vertical",
	-- 	layout_config = {
	-- 		width = 0.7,
	-- 		height = 0.9,
	-- 		preview_cutoff = 1,
	-- 		preview_height = function(_, _, max_lines)
	-- 			local h = math.floor(max_lines * 0.5)
	-- 			return math.max(h, 10)
	-- 		end,
	-- 	},
	-- },
	-- -- The icons to use for the code actions
	-- -- You can add your own icons, you just need to set the exact action's kind of the code action
	-- -- You can set the highlight like so: { link = "DiagnosticError" } or  like nvim_set_hl ({ fg ..., bg..., bold..., ...})
	-- signs = {
	-- 	quickfix = { "󰁨", { link = "DiagnosticInfo" } },
	-- 	others = { "?", { link = "DiagnosticWarning" } },
	-- 	refactor = { "", { link = "DiagnosticWarning" } },
	-- 	["refactor.move"] = { "󰪹", { link = "DiagnosticInfo" } },
	-- 	["refactor.extract"] = { "", { link = "DiagnosticError" } },
	-- 	["source.organizeImports"] = { "", { link = "TelescopeResultVariable" } },
	-- 	["source.fixAll"] = { "", { link = "TelescopeResultVariable" } },
	-- 	["source"] = { "", { link = "DiagnosticError" } },
	-- 	["rename"] = { "󰑕", { link = "DiagnosticWarning" } },
	-- 	["codeAction"] = { "", { link = "DiagnosticError" } },
	-- },
})
